{"ast":null,"code":"import { useCallback } from 'react';\nimport { useMessageComposer } from './useMessageComposer';\nimport { useChannelActionContext } from '../../../context/ChannelActionContext';\nimport { useTranslationContext } from '../../../context/TranslationContext';\nexport const useSubmitHandler = props => {\n  const {\n    clearEditingState,\n    overrideSubmitHandler\n  } = props;\n  const {\n    addNotification,\n    editMessage,\n    sendMessage\n  } = useChannelActionContext('useSubmitHandler');\n  const {\n    t\n  } = useTranslationContext('useSubmitHandler');\n  const messageComposer = useMessageComposer();\n  const handleSubmit = useCallback(async event => {\n    event?.preventDefault();\n    const composition = await messageComposer.compose();\n    if (!composition || !composition.message) return;\n    const {\n      localMessage,\n      message,\n      sendOptions\n    } = composition;\n    if (messageComposer.editedMessage && localMessage.type !== 'error') {\n      try {\n        await editMessage(localMessage, sendOptions);\n        clearEditingState?.();\n      } catch (err) {\n        addNotification(t('Edit message request failed'), 'error');\n      }\n    } else {\n      try {\n        // todo: get rid of overrideSubmitHandler once MessageComposer supports submission flow\n        if (overrideSubmitHandler) {\n          await overrideSubmitHandler({\n            cid: messageComposer.channel.cid,\n            localMessage,\n            message,\n            sendOptions\n          });\n        } else {\n          await sendMessage({\n            localMessage,\n            message,\n            options: sendOptions\n          });\n        }\n        messageComposer.clear();\n        if (messageComposer.config.text.publishTypingEvents) await messageComposer.channel.stopTyping();\n      } catch (err) {\n        addNotification(t('Send message request failed'), 'error');\n      }\n    }\n  }, [addNotification, clearEditingState, editMessage, messageComposer, overrideSubmitHandler, sendMessage, t]);\n  return {\n    handleSubmit\n  };\n};","map":{"version":3,"names":["useCallback","useMessageComposer","useChannelActionContext","useTranslationContext","useSubmitHandler","props","clearEditingState","overrideSubmitHandler","addNotification","editMessage","sendMessage","t","messageComposer","handleSubmit","event","preventDefault","composition","compose","message","localMessage","sendOptions","editedMessage","type","err","cid","channel","options","clear","config","text","publishTypingEvents","stopTyping"],"sources":["C:/Users/benny/node_modules/stream-chat-react/dist/components/MessageInput/hooks/useSubmitHandler.js"],"sourcesContent":["import { useCallback } from 'react';\nimport { useMessageComposer } from './useMessageComposer';\nimport { useChannelActionContext } from '../../../context/ChannelActionContext';\nimport { useTranslationContext } from '../../../context/TranslationContext';\nexport const useSubmitHandler = (props) => {\n    const { clearEditingState, overrideSubmitHandler } = props;\n    const { addNotification, editMessage, sendMessage } = useChannelActionContext('useSubmitHandler');\n    const { t } = useTranslationContext('useSubmitHandler');\n    const messageComposer = useMessageComposer();\n    const handleSubmit = useCallback(async (event) => {\n        event?.preventDefault();\n        const composition = await messageComposer.compose();\n        if (!composition || !composition.message)\n            return;\n        const { localMessage, message, sendOptions } = composition;\n        if (messageComposer.editedMessage && localMessage.type !== 'error') {\n            try {\n                await editMessage(localMessage, sendOptions);\n                clearEditingState?.();\n            }\n            catch (err) {\n                addNotification(t('Edit message request failed'), 'error');\n            }\n        }\n        else {\n            try {\n                // todo: get rid of overrideSubmitHandler once MessageComposer supports submission flow\n                if (overrideSubmitHandler) {\n                    await overrideSubmitHandler({\n                        cid: messageComposer.channel.cid,\n                        localMessage,\n                        message,\n                        sendOptions,\n                    });\n                }\n                else {\n                    await sendMessage({ localMessage, message, options: sendOptions });\n                }\n                messageComposer.clear();\n                if (messageComposer.config.text.publishTypingEvents)\n                    await messageComposer.channel.stopTyping();\n            }\n            catch (err) {\n                addNotification(t('Send message request failed'), 'error');\n            }\n        }\n    }, [\n        addNotification,\n        clearEditingState,\n        editMessage,\n        messageComposer,\n        overrideSubmitHandler,\n        sendMessage,\n        t,\n    ]);\n    return { handleSubmit };\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,uBAAuB,QAAQ,uCAAuC;AAC/E,SAASC,qBAAqB,QAAQ,qCAAqC;AAC3E,OAAO,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EACvC,MAAM;IAAEC,iBAAiB;IAAEC;EAAsB,CAAC,GAAGF,KAAK;EAC1D,MAAM;IAAEG,eAAe;IAAEC,WAAW;IAAEC;EAAY,CAAC,GAAGR,uBAAuB,CAAC,kBAAkB,CAAC;EACjG,MAAM;IAAES;EAAE,CAAC,GAAGR,qBAAqB,CAAC,kBAAkB,CAAC;EACvD,MAAMS,eAAe,GAAGX,kBAAkB,CAAC,CAAC;EAC5C,MAAMY,YAAY,GAAGb,WAAW,CAAC,MAAOc,KAAK,IAAK;IAC9CA,KAAK,EAAEC,cAAc,CAAC,CAAC;IACvB,MAAMC,WAAW,GAAG,MAAMJ,eAAe,CAACK,OAAO,CAAC,CAAC;IACnD,IAAI,CAACD,WAAW,IAAI,CAACA,WAAW,CAACE,OAAO,EACpC;IACJ,MAAM;MAAEC,YAAY;MAAED,OAAO;MAAEE;IAAY,CAAC,GAAGJ,WAAW;IAC1D,IAAIJ,eAAe,CAACS,aAAa,IAAIF,YAAY,CAACG,IAAI,KAAK,OAAO,EAAE;MAChE,IAAI;QACA,MAAMb,WAAW,CAACU,YAAY,EAAEC,WAAW,CAAC;QAC5Cd,iBAAiB,GAAG,CAAC;MACzB,CAAC,CACD,OAAOiB,GAAG,EAAE;QACRf,eAAe,CAACG,CAAC,CAAC,6BAA6B,CAAC,EAAE,OAAO,CAAC;MAC9D;IACJ,CAAC,MACI;MACD,IAAI;QACA;QACA,IAAIJ,qBAAqB,EAAE;UACvB,MAAMA,qBAAqB,CAAC;YACxBiB,GAAG,EAAEZ,eAAe,CAACa,OAAO,CAACD,GAAG;YAChCL,YAAY;YACZD,OAAO;YACPE;UACJ,CAAC,CAAC;QACN,CAAC,MACI;UACD,MAAMV,WAAW,CAAC;YAAES,YAAY;YAAED,OAAO;YAAEQ,OAAO,EAAEN;UAAY,CAAC,CAAC;QACtE;QACAR,eAAe,CAACe,KAAK,CAAC,CAAC;QACvB,IAAIf,eAAe,CAACgB,MAAM,CAACC,IAAI,CAACC,mBAAmB,EAC/C,MAAMlB,eAAe,CAACa,OAAO,CAACM,UAAU,CAAC,CAAC;MAClD,CAAC,CACD,OAAOR,GAAG,EAAE;QACRf,eAAe,CAACG,CAAC,CAAC,6BAA6B,CAAC,EAAE,OAAO,CAAC;MAC9D;IACJ;EACJ,CAAC,EAAE,CACCH,eAAe,EACfF,iBAAiB,EACjBG,WAAW,EACXG,eAAe,EACfL,qBAAqB,EACrBG,WAAW,EACXC,CAAC,CACJ,CAAC;EACF,OAAO;IAAEE;EAAa,CAAC;AAC3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}