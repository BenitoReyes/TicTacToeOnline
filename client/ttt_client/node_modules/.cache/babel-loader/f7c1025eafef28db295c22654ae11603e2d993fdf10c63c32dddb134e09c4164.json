{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benny\\\\Documents\\\\GitHub\\\\TicTacToeOnline\\\\client\\\\ttt_client\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Square from './Square';\nimport { useState } from 'react';\nimport { useChannelStateContext, useChatContext } from 'stream-chat-react';\nimport { Patterns } from './WinningPatterns.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Board({\n  result,\n  setResult\n}) {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(\"\"));\n  const [player, setPlayer] = useState(\"X\"); // or \"O\" based on the player's turn\n  const [turn, setTurn] = useState(\"X\"); // or \"O\" based on the player's turn\n  const {\n    channel\n  } = useChannelStateContext();\n  const {\n    client\n  } = useChatContext();\n  const chooseSquare = async square => {\n    if (turn === player && board[square] === \"\") {\n      setTurn(player === \"X\" ? \"O\" : \"X\");\n      await channel.sendEvent({\n        type: \"game-move\",\n        data: {\n          square,\n          player\n        }\n      });\n      setBoard(board.map((val, idx) => {\n        if (idx === square && val === \"\") {\n          return player;\n        }\n        return val;\n      }));\n    }\n  };\n  const checkWin = () => {\n    Patterns.forEach(currPattern => {\n      const firstPlayer = board[currPattern[0]];\n      if (firstPlayer === \"\") return;\n      let foundWinningPattern = true;\n      currPattern.forEach(idx => {\n        if (board[idx] !== firstPlayer) {\n          foundWinningPattern = false;\n        }\n      });\n      if (foundWinningPattern) {\n        setResult({\n          winner: board[currPattern[0]],\n          state: \"Won\"\n        });\n        alert(`${currPattern[0]} wins!`);\n        // Reset the board\n        setBoard(Array(9).fill(\"\"));\n        setTurn(\"X\");\n        setPlayer(\"X\");\n        channel.sendEvent({\n          type: \"game-reset\",\n          data: {}\n        });\n      }\n    });\n  };\n  channel.on(event => {\n    if (event.type === \"game-move\" && event.user.id !== client.userID) {\n      const currentPlayer = event.data.player === \"X\" ? \"O\" : \"X\";\n      setPlayer(currentPlayer);\n      setTurn(currentPlayer);\n      setBoard(board.map((val, idx) => {\n        if (idx === event.data.square && val === \"\") {\n          return event.data.player;\n        }\n        return val;\n      }));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        chooseSquare: () => {\n          chooseSquare(0);\n        },\n        val: board[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        chooseSquare: () => {\n          chooseSquare(1);\n        },\n        val: board[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        chooseSquare: () => {\n          chooseSquare(2);\n        },\n        val: board[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        chooseSquare: () => {\n          chooseSquare(3);\n        },\n        val: board[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        chooseSquare: () => {\n          chooseSquare(4);\n        },\n        val: board[4]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        chooseSquare: () => {\n          chooseSquare(5);\n        },\n        val: board[5]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        chooseSquare: () => {\n          chooseSquare(6);\n        },\n        val: board[6]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        chooseSquare: () => {\n          chooseSquare(7);\n        },\n        val: board[7]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        chooseSquare: () => {\n          chooseSquare(8);\n        },\n        val: board[8]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"D0a/wcj2DlmDI89MP1kS8EpVuKs=\", false, function () {\n  return [useChannelStateContext, useChatContext];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","Square","useState","useChannelStateContext","useChatContext","Patterns","jsxDEV","_jsxDEV","Board","result","setResult","_s","board","setBoard","Array","fill","player","setPlayer","turn","setTurn","channel","client","chooseSquare","square","sendEvent","type","data","map","val","idx","checkWin","forEach","currPattern","firstPlayer","foundWinningPattern","winner","state","alert","on","event","user","id","userID","currentPlayer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/benny/Documents/GitHub/TicTacToeOnline/client/ttt_client/src/components/Board.js"],"sourcesContent":["import React from 'react'\r\nimport Square from './Square';\r\nimport { useState } from 'react';\r\nimport { useChannelStateContext, useChatContext } from 'stream-chat-react';\r\nimport {Patterns} from './WinningPatterns.js'\r\nfunction Board({result, setResult}) {\r\n    const [board, setBoard] = useState(Array(9).fill(\"\"));\r\n    const [player,setPlayer] = useState(\"X\"); // or \"O\" based on the player's turn\r\n    const [turn, setTurn] = useState(\"X\"); // or \"O\" based on the player's turn\r\n    const { channel } = useChannelStateContext();\r\n    const { client } = useChatContext();\r\n    const chooseSquare = async(square) => {\r\n        if(turn === player && board[square] === \"\") {\r\n            setTurn(player === \"X\" ? \"O\" : \"X\");\r\n            await channel.sendEvent({\r\n                type: \"game-move\",\r\n                data: { square, player }\r\n            });\r\n            setBoard(board.map((val, idx) => {\r\n                if(idx === square && val === \"\") {\r\n                    return player;\r\n                }\r\n                return val;\r\n            }))\r\n        }\r\n    }\r\n    const checkWin = () => {\r\n        Patterns.forEach(currPattern => {\r\n            const firstPlayer = board[currPattern[0]];\r\n            if(firstPlayer === \"\") return;\r\n            let foundWinningPattern = true;\r\n            currPattern.forEach(idx => {\r\n                if(board[idx] !== firstPlayer) {\r\n                    foundWinningPattern = false;\r\n                }\r\n            });\r\n            if(foundWinningPattern) {\r\n                setResult({winner: board[currPattern[0]], state: \"Won\"});\r\n                alert(`${currPattern[0]} wins!`);\r\n                // Reset the board\r\n                setBoard(Array(9).fill(\"\"));\r\n                setTurn(\"X\");\r\n                setPlayer(\"X\");\r\n                channel.sendEvent({\r\n                    type: \"game-reset\",\r\n                    data: {}\r\n                });\r\n            }\r\n        })\r\n    }\r\n    channel.on(event => { \r\n        if(event.type === \"game-move\" && event.user.id !== client.userID) {\r\n            const currentPlayer = event.data.player === \"X\" ? \"O\" : \"X\";\r\n            setPlayer(currentPlayer);\r\n            setTurn(currentPlayer);\r\n            setBoard(board.map((val, idx) => {\r\n                if(idx === event.data.square && val === \"\") {\r\n                    return event.data.player;\r\n                }\r\n                return val;\r\n            }))\r\n        }\r\n    })\r\n  return (\r\n    <div className=\"board\">\r\n        <div className=\"row\">\r\n            <Square chooseSquare={() => {chooseSquare(0)}} val={board[0]}/>\r\n            <Square chooseSquare={() => {chooseSquare(1)}} val={board[1]}/>\r\n            <Square chooseSquare={() => {chooseSquare(2)}} val={board[2]}/>\r\n        </div>\r\n        <div className=\"row\">\r\n            <Square chooseSquare={() => {chooseSquare(3)}} val={board[3]}/>\r\n            <Square chooseSquare={() => {chooseSquare(4)}} val={board[4]}/>\r\n            <Square chooseSquare={() => {chooseSquare(5)}} val={board[5]}/>\r\n        </div>\r\n        <div className=\"row\">\r\n            <Square chooseSquare={() => {chooseSquare(6)}} val={board[6]}/>\r\n            <Square chooseSquare={() => {chooseSquare(7)}} val={board[7]}/>\r\n            <Square chooseSquare={() => {chooseSquare(8)}}val={board[8]}/>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Board"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,sBAAsB,EAAEC,cAAc,QAAQ,mBAAmB;AAC1E,SAAQC,QAAQ,QAAO,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC7C,SAASC,KAAKA,CAAC;EAACC,MAAM;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACY,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;EACrD,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAAGf,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACvC,MAAM;IAAEkB;EAAQ,CAAC,GAAGjB,sBAAsB,CAAC,CAAC;EAC5C,MAAM;IAAEkB;EAAO,CAAC,GAAGjB,cAAc,CAAC,CAAC;EACnC,MAAMkB,YAAY,GAAG,MAAMC,MAAM,IAAK;IAClC,IAAGL,IAAI,KAAKF,MAAM,IAAIJ,KAAK,CAACW,MAAM,CAAC,KAAK,EAAE,EAAE;MACxCJ,OAAO,CAACH,MAAM,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;MACnC,MAAMI,OAAO,CAACI,SAAS,CAAC;QACpBC,IAAI,EAAE,WAAW;QACjBC,IAAI,EAAE;UAAEH,MAAM;UAAEP;QAAO;MAC3B,CAAC,CAAC;MACFH,QAAQ,CAACD,KAAK,CAACe,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;QAC7B,IAAGA,GAAG,KAAKN,MAAM,IAAIK,GAAG,KAAK,EAAE,EAAE;UAC7B,OAAOZ,MAAM;QACjB;QACA,OAAOY,GAAG;MACd,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;EACD,MAAME,QAAQ,GAAGA,CAAA,KAAM;IACnBzB,QAAQ,CAAC0B,OAAO,CAACC,WAAW,IAAI;MAC5B,MAAMC,WAAW,GAAGrB,KAAK,CAACoB,WAAW,CAAC,CAAC,CAAC,CAAC;MACzC,IAAGC,WAAW,KAAK,EAAE,EAAE;MACvB,IAAIC,mBAAmB,GAAG,IAAI;MAC9BF,WAAW,CAACD,OAAO,CAACF,GAAG,IAAI;QACvB,IAAGjB,KAAK,CAACiB,GAAG,CAAC,KAAKI,WAAW,EAAE;UAC3BC,mBAAmB,GAAG,KAAK;QAC/B;MACJ,CAAC,CAAC;MACF,IAAGA,mBAAmB,EAAE;QACpBxB,SAAS,CAAC;UAACyB,MAAM,EAAEvB,KAAK,CAACoB,WAAW,CAAC,CAAC,CAAC,CAAC;UAAEI,KAAK,EAAE;QAAK,CAAC,CAAC;QACxDC,KAAK,CAAC,GAAGL,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC;QAChC;QACAnB,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3BI,OAAO,CAAC,GAAG,CAAC;QACZF,SAAS,CAAC,GAAG,CAAC;QACdG,OAAO,CAACI,SAAS,CAAC;UACdC,IAAI,EAAE,YAAY;UAClBC,IAAI,EAAE,CAAC;QACX,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN,CAAC;EACDN,OAAO,CAACkB,EAAE,CAACC,KAAK,IAAI;IAChB,IAAGA,KAAK,CAACd,IAAI,KAAK,WAAW,IAAIc,KAAK,CAACC,IAAI,CAACC,EAAE,KAAKpB,MAAM,CAACqB,MAAM,EAAE;MAC9D,MAAMC,aAAa,GAAGJ,KAAK,CAACb,IAAI,CAACV,MAAM,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG;MAC3DC,SAAS,CAAC0B,aAAa,CAAC;MACxBxB,OAAO,CAACwB,aAAa,CAAC;MACtB9B,QAAQ,CAACD,KAAK,CAACe,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;QAC7B,IAAGA,GAAG,KAAKU,KAAK,CAACb,IAAI,CAACH,MAAM,IAAIK,GAAG,KAAK,EAAE,EAAE;UACxC,OAAOW,KAAK,CAACb,IAAI,CAACV,MAAM;QAC5B;QACA,OAAOY,GAAG;MACd,CAAC,CAAC,CAAC;IACP;EACJ,CAAC,CAAC;EACJ,oBACErB,OAAA;IAAKqC,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClBtC,OAAA;MAAKqC,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAChBtC,OAAA,CAACN,MAAM;QAACqB,YAAY,EAAEA,CAAA,KAAM;UAACA,YAAY,CAAC,CAAC,CAAC;QAAA,CAAE;QAACM,GAAG,EAAEhB,KAAK,CAAC,CAAC;MAAE;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/D1C,OAAA,CAACN,MAAM;QAACqB,YAAY,EAAEA,CAAA,KAAM;UAACA,YAAY,CAAC,CAAC,CAAC;QAAA,CAAE;QAACM,GAAG,EAAEhB,KAAK,CAAC,CAAC;MAAE;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/D1C,OAAA,CAACN,MAAM;QAACqB,YAAY,EAAEA,CAAA,KAAM;UAACA,YAAY,CAAC,CAAC,CAAC;QAAA,CAAE;QAACM,GAAG,EAAEhB,KAAK,CAAC,CAAC;MAAE;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,eACN1C,OAAA;MAAKqC,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAChBtC,OAAA,CAACN,MAAM;QAACqB,YAAY,EAAEA,CAAA,KAAM;UAACA,YAAY,CAAC,CAAC,CAAC;QAAA,CAAE;QAACM,GAAG,EAAEhB,KAAK,CAAC,CAAC;MAAE;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/D1C,OAAA,CAACN,MAAM;QAACqB,YAAY,EAAEA,CAAA,KAAM;UAACA,YAAY,CAAC,CAAC,CAAC;QAAA,CAAE;QAACM,GAAG,EAAEhB,KAAK,CAAC,CAAC;MAAE;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/D1C,OAAA,CAACN,MAAM;QAACqB,YAAY,EAAEA,CAAA,KAAM;UAACA,YAAY,CAAC,CAAC,CAAC;QAAA,CAAE;QAACM,GAAG,EAAEhB,KAAK,CAAC,CAAC;MAAE;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,eACN1C,OAAA;MAAKqC,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAChBtC,OAAA,CAACN,MAAM;QAACqB,YAAY,EAAEA,CAAA,KAAM;UAACA,YAAY,CAAC,CAAC,CAAC;QAAA,CAAE;QAACM,GAAG,EAAEhB,KAAK,CAAC,CAAC;MAAE;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/D1C,OAAA,CAACN,MAAM;QAACqB,YAAY,EAAEA,CAAA,KAAM;UAACA,YAAY,CAAC,CAAC,CAAC;QAAA,CAAE;QAACM,GAAG,EAAEhB,KAAK,CAAC,CAAC;MAAE;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/D1C,OAAA,CAACN,MAAM;QAACqB,YAAY,EAAEA,CAAA,KAAM;UAACA,YAAY,CAAC,CAAC,CAAC;QAAA,CAAE;QAAAM,GAAG,EAAEhB,KAAK,CAAC,CAAC;MAAE;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACtC,EAAA,CA7EQH,KAAK;EAAA,QAIUL,sBAAsB,EACvBC,cAAc;AAAA;AAAA8C,EAAA,GAL5B1C,KAAK;AA+Ed,eAAeA,KAAK;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}