{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benny\\\\Documents\\\\GitHub\\\\TicTacToeOnline\\\\client\\\\ttt_client\\\\src\\\\components\\\\JoinGame.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useChatContext, Channel } from 'stream-chat-react';\nimport Game from './Game';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction JoinGame() {\n  _s();\n  const [rivalUsername, setRivalUsername] = React.useState(\"\");\n  const {\n    client\n  } = useChatContext();\n  const [channel, setChannel] = React.useState(null);\n  const createChannel = async () => {\n    const response = await client.queryUsers({\n      name: {\n        $eq: rivalUsername\n      }\n    });\n    if (response.users.length === 0) {\n      alert(\"User not found\");\n      return;\n    }\n    const userIds = [client.userID, response.users[0].id].sort();\n    // Use a base64 hash for a deterministic, short channel ID\n    const raw = userIds.join('-');\n    const channelId = 'game-' + btoa(raw).replace(/[^a-zA-Z0-9]/g, '').slice(0, 40);\n    const newChannel = await client.channel(\"messaging\", channelId, {\n      members: userIds,\n      name: `Game between ${userIds[0]} and ${userIds[1]}`\n    });\n    await newChannel.watch();\n    setChannel(newChannel);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: channel ? /*#__PURE__*/_jsxDEV(Channel, {\n      channel: channel,\n      children: /*#__PURE__*/_jsxDEV(Game, {\n        channel: channel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"joinGame\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Create Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"username of rival\",\n        onChange: event => {\n          setRivalUsername(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createChannel,\n        children: \"Join/Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(JoinGame, \"5tZfjw81OPkwEbM+l5CNC+ibj4k=\", false, function () {\n  return [useChatContext];\n});\n_c = JoinGame;\nexport default JoinGame;\nvar _c;\n$RefreshReg$(_c, \"JoinGame\");","map":{"version":3,"names":["React","useChatContext","Channel","Game","jsxDEV","_jsxDEV","Fragment","_Fragment","JoinGame","_s","rivalUsername","setRivalUsername","useState","client","channel","setChannel","createChannel","response","queryUsers","name","$eq","users","length","alert","userIds","userID","id","sort","raw","join","channelId","btoa","replace","slice","newChannel","members","watch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","placeholder","onChange","event","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/benny/Documents/GitHub/TicTacToeOnline/client/ttt_client/src/components/JoinGame.js"],"sourcesContent":["import React from 'react'\r\nimport { useChatContext, Channel } from 'stream-chat-react';\r\nimport Game from './Game';\r\nfunction JoinGame() {\r\n  const [rivalUsername, setRivalUsername] = React.useState(\"\");\r\n  const { client } = useChatContext();\r\n  const [channel, setChannel] = React.useState(null);\r\n  const createChannel = async() =>{\r\n    const response = await client.queryUsers({name: {$eq: rivalUsername}});\r\n    if (response.users.length === 0) {\r\n      alert(\"User not found\");\r\n      return;\r\n    }\r\n    const userIds = [client.userID, response.users[0].id].sort();\r\n    // Use a base64 hash for a deterministic, short channel ID\r\n    const raw = userIds.join('-');\r\n    const channelId = 'game-' + btoa(raw).replace(/[^a-zA-Z0-9]/g, '').slice(0, 40);\r\n    const newChannel = await client.channel(\"messaging\", channelId, {\r\n      members: userIds,\r\n      name: `Game between ${userIds[0]} and ${userIds[1]}`,\r\n    });\r\n    await newChannel.watch();\r\n    setChannel(newChannel);\r\n  }\r\n  return (\r\n    <>\r\n    {channel ? (\r\n      <Channel channel={channel} >\r\n        <Game channel={channel}/>\r\n      </Channel>\r\n    ) : (\r\n    <div className=\"joinGame\"><h4>Create Game</h4>\r\n    <input placeholder=\"username of rival\" onChange = {(event) => {\r\n      setRivalUsername(event.target.value);\r\n    }} />\r\n    <button onClick ={createChannel}>Join/Start Game</button>\r\n    </div>\r\n    )}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default JoinGame"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}