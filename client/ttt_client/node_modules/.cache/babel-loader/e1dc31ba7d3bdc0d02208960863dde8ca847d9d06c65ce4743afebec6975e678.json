{"ast":null,"code":"import React from 'react';\nimport { ConnectionStatus } from './ConnectionStatus';\nimport { CustomNotification } from './CustomNotification';\nimport { useTranslationContext } from '../../context/TranslationContext';\nexport const MessageListNotifications = props => {\n  const {\n    hasNewMessages,\n    isMessageListScrolledToBottom,\n    isNotAtLatestMessageSet,\n    MessageNotification,\n    notifications,\n    scrollToBottom,\n    threadList,\n    unreadCount\n  } = props;\n  const {\n    t\n  } = useTranslationContext('MessageListNotifications');\n  return React.createElement(\"div\", {\n    className: 'str-chat__list-notifications'\n  }, notifications.map(notification => React.createElement(CustomNotification, {\n    active: true,\n    key: notification.id,\n    type: notification.type\n  }, notification.text)), React.createElement(ConnectionStatus, null), React.createElement(MessageNotification, {\n    isMessageListScrolledToBottom: isMessageListScrolledToBottom,\n    onClick: scrollToBottom,\n    showNotification: hasNewMessages || isNotAtLatestMessageSet,\n    threadList: threadList,\n    unreadCount: unreadCount\n  }, isNotAtLatestMessageSet ? t('Latest Messages') : t('New Messages!')));\n};","map":{"version":3,"names":["React","ConnectionStatus","CustomNotification","useTranslationContext","MessageListNotifications","props","hasNewMessages","isMessageListScrolledToBottom","isNotAtLatestMessageSet","MessageNotification","notifications","scrollToBottom","threadList","unreadCount","t","createElement","className","map","notification","active","key","id","type","text","onClick","showNotification"],"sources":["C:/Users/benny/node_modules/stream-chat-react/dist/components/MessageList/MessageListNotifications.js"],"sourcesContent":["import React from 'react';\nimport { ConnectionStatus } from './ConnectionStatus';\nimport { CustomNotification } from './CustomNotification';\nimport { useTranslationContext } from '../../context/TranslationContext';\nexport const MessageListNotifications = (props) => {\n    const { hasNewMessages, isMessageListScrolledToBottom, isNotAtLatestMessageSet, MessageNotification, notifications, scrollToBottom, threadList, unreadCount, } = props;\n    const { t } = useTranslationContext('MessageListNotifications');\n    return (React.createElement(\"div\", { className: 'str-chat__list-notifications' },\n        notifications.map((notification) => (React.createElement(CustomNotification, { active: true, key: notification.id, type: notification.type }, notification.text))),\n        React.createElement(ConnectionStatus, null),\n        React.createElement(MessageNotification, { isMessageListScrolledToBottom: isMessageListScrolledToBottom, onClick: scrollToBottom, showNotification: hasNewMessages || isNotAtLatestMessageSet, threadList: threadList, unreadCount: unreadCount }, isNotAtLatestMessageSet\n            ? t('Latest Messages')\n            : t('New Messages!'))));\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,qBAAqB,QAAQ,kCAAkC;AACxE,OAAO,MAAMC,wBAAwB,GAAIC,KAAK,IAAK;EAC/C,MAAM;IAAEC,cAAc;IAAEC,6BAA6B;IAAEC,uBAAuB;IAAEC,mBAAmB;IAAEC,aAAa;IAAEC,cAAc;IAAEC,UAAU;IAAEC;EAAa,CAAC,GAAGR,KAAK;EACtK,MAAM;IAAES;EAAE,CAAC,GAAGX,qBAAqB,CAAC,0BAA0B,CAAC;EAC/D,OAAQH,KAAK,CAACe,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAA+B,CAAC,EAC5EN,aAAa,CAACO,GAAG,CAAEC,YAAY,IAAMlB,KAAK,CAACe,aAAa,CAACb,kBAAkB,EAAE;IAAEiB,MAAM,EAAE,IAAI;IAAEC,GAAG,EAAEF,YAAY,CAACG,EAAE;IAAEC,IAAI,EAAEJ,YAAY,CAACI;EAAK,CAAC,EAAEJ,YAAY,CAACK,IAAI,CAAE,CAAC,EAClKvB,KAAK,CAACe,aAAa,CAACd,gBAAgB,EAAE,IAAI,CAAC,EAC3CD,KAAK,CAACe,aAAa,CAACN,mBAAmB,EAAE;IAAEF,6BAA6B,EAAEA,6BAA6B;IAAEiB,OAAO,EAAEb,cAAc;IAAEc,gBAAgB,EAAEnB,cAAc,IAAIE,uBAAuB;IAAEI,UAAU,EAAEA,UAAU;IAAEC,WAAW,EAAEA;EAAY,CAAC,EAAEL,uBAAuB,GACpQM,CAAC,CAAC,iBAAiB,CAAC,GACpBA,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;AAClC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}